version: '2.30.1'  # Adicione a versão do compose

services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-projeto}
      POSTGRES_USER: ${POSTGRES_USER:-projeto}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-projeto}
    volumes:
      - ./db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-projeto}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network  # Conectando à rede interna sem exposição de porta
   
  api:
    build:
      context: ./api
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-projeto}:${POSTGRES_PASSWORD:-projeto}@db:5432/${POSTGRES_DB:-projeto}
      SECRET_KEY : ${SECRET_KEY:-mysecretkey}
    networks:
      - app-network  # Conectando à rede
    depends_on:
      db:
        condition: service_healthy  # Espera até o DB estar saudável
    deploy:
      replicas: 3

  web:
    build:  # Use build em vez de image se você estiver construindo a partir de um Dockerfile
      context: ./web
    ports:
      - "8080:80"
    volumes:
      - ./web/nginx.conf:/etc/nginx/conf.d/default.conf  # Montando o arquivo de configuração
    networks:
      - app-network  # Conectando à rede
    depends_on:
      - api

networks:
  app-network:
    driver: overlay
